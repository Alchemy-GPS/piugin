<?php/** * 前台积分充值 */if (!defined('IN_DISCUZ')) {	exit('Access Denied');}//var_dump($_POST);exit;require_once(DISCUZ_ROOT . './source/plugin/achpay/require/function.php');//插件地址$basename = 'home.php?mod=spacecp&ac=plugin&op=credit&id=achpay:home';if($_GET['finish'] && $_G['uid']){	$test = DB::fetch_first("SELECT creditnum,status FROM " . DB::table('achpay_log') . " WHERE uid = '".$_G['uid']."' ORDER BY dateline DESC");	if($test['status']>0){		showmessage('&#x60A8;&#x5DF2;&#x6210;&#x529F;&#x5145;&#x503C;'.$test['creditnum'].'&#x91D1;&#x5E01;',$basename,array(),array('alert' => 'right'));		}else{		showmessage('&#x60A8;&#x5145;&#x503C;&#x7684;'.$test['creditnum'].'&#x79EF;&#x5206;&#x6B63;&#x5728;&#x786E;&#x8BA4;&#x652F;&#x4ED8;&#x7ED3;&#x679C;&#xFF0C;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x4E00;&#x5B9A;&#x5EF6;&#x8FDF;&#xFF0C;&#x8BF7;&#x7559;&#x610F;&#x540E;&#x7EED;&#x7AD9;&#x5185;&#x901A;&#x77E5;&#x548C;&#x79EF;&#x5206;&#x53D8;&#x5316;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x6709;&#x7591;&#x95EE;&#x8BF7;&#x8054;&#x7CFB;&#x7F51;&#x7AD9;&#x7BA1;&#x7406;&#x4EBA;&#x5458;',$basename,array(),array());		}}//所有设置数据$salepayconf = $_G['cache']['plugin']['achpay'];//获取加密币列表数据if($salepayconf['copen']=='1'){    $data = array(        'merchantId'=>$salepayconf['cyrpt'],        'appVersion'=>'1.0'    );    $data['sign'] = achpay_get_sign($data,DISCUZ_ROOT . 'source/plugin/achpay/keys/pkey.txt');    $res = achpay_http_post('http://test.alchemy.foundation/gateway/query/merchant/cryptocurrencyList',$data);    $currencyVoList=json_decode($res)->currencyVoList;//    var_dump($currencyVoList);exit;    $blockchain=[];    $lightning=[];    foreach ($currencyVoList as $v){        if($v->netWorkType=='blockchain'){            array_push($blockchain,['cryptocurrencyName'=>$v->cryptocurrencyName,'cryptocurrendyId'=>$v->cryptocurrendyId]);        }else{            array_push($lightning,['cryptocurrencyName'=>$v->cryptocurrencyName,'cryptocurrendyId'=>$v->cryptocurrendyId]);        }    }}//金额对应积分 数据$exlist = explode("\r\n",$salepayconf['exlist']);//声明两个数组$exbase = array();$exgift = array();foreach($exlist as $e){	$set = explode("|",$e);	if($set[0]){		$exbase[] = intval($set[0]);		$exgift[] = intval($set[1]);	}}//过期时间 按照分钟 订单最大有效期为15分钟$bdt = ($salepayconf['passtime']<=15)?($salepayconf['passtime']*60):900;$pd = $_G['timestamp'] - $bdt;$passtime = DB::query("UPDATE " . DB::table('achpay_log') . " SET status = '-1',payline='".$_G['timestamp']."' WHERE dateline < '".$pd."' AND payline='0'");if (!in_array('achpay', $_G['setting']['plugins']['available']) || empty($salepayconf['ifopen'])) {	showmessage('plugin_nonexistence');}//充值积分种类$_extcredits = $_G['setting']['extcredits'];//是否为手机$_isMobile = defined('IN_MOBILE') ? true : false;//是否为微信$_isWechat = stripos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false ? true : false;$_isWechatPay = $_isWechat ? preg_replace("/.*MicroMessenger\/(\d+).*/i", "\\1", $_SERVER['HTTP_USER_AGENT']) >= 5 : false;$act = getgpc('act');//积分充值$navtitle = $metakeywords = $metadescription = lang('plugin/achpay', 'lang001');//如果act为空if (empty($act)) {	if (!submitcheck('dosubmit', 1)) {		include template('achpay:index');		dexit();	}//用户选择的充值金钱数量	$money = getgpc('money');//如果输入的不是数字	if (!is_numeric($money) || $money < intval("{$salepayconf[min]}") || $money > intval("{$salepayconf[max]}")) {		showmessage('achpay:lang006');	}	$total_fee = round($money * $salepayconf['price'], 2);//    价格设置出错	if ($total_fee < 0.01) {		showmessage('achpay:lang007');	}	$out_trade_no = dgmdate(TIMESTAMP, 'Ymdhis') . random(6, 1);	$payMethod = $_GET['payMethod'];	achpay_redel($_G['uid']);		achpay_add($_G['uid'], $salepayconf['type'], $money, $total_fee, $out_trade_no,'person');    $price = explode('.', number_format($total_fee, 2));//如果是加密币支付则跳转到qrcode.html 否则跳转到pay.html    if(is_numeric($_GET['payMethod'])){        $out_trade_no = dgmdate(TIMESTAMP, 'Ymdhis') . random(6, 1);        $payMethod = $_GET['payMethod'];        achpay_redel($_G['uid']);        achpay_add($_G['uid'], $salepayconf['type'], $money, $total_fee, $out_trade_no,'cyrpt');        $cdata=[            "orderId"=>$out_trade_no,            "merchantId"=>$salepayconf['cyrpt'],            "cryptoCurrencyId"=>$_GET['payMethod'],            "appVersion"=>"1.0",            "successUrl"=>rtrim($_G['siteurl'], '/') . '/source/plugin/achpay/return.php',            "failUrl"=>$basename,            "currencyAmount"=>number_format($total_fee,2),            "currencyId"=>"156"        ];        $cdata['sign'] = achpay_get_sign($cdata,DISCUZ_ROOT . 'source/plugin/achpay/keys/pkey.txt');		$personPayment = 'http://test.alchemy.foundation/gateway/trade/plugin/payment';//    跳转到支付网关		header("Location:".$personPayment.'?'.http_build_query($cdata));		exit;//        var_dump($cdata);exit;//        //组装好数据之后进行post $result为返回结果//        $cyrptPayment = 'http://test.alchemy.foundation/gateway/trade/apply';//            $res = achpay_http_post($cyrptPayment,$cdata);//            $res = json_decode($res);//        include template('achpay:qrcode');//        exit;    }else{        include template('achpay:pay');        dexit();    }}elseif ($act == 'getpay') {	if (!submitcheck('dosubmit', 1)) {		achpay_json('Access Denied');	}//订单号	$out_trade_no = getgpc('out_trade_no');//获取订单号、时间、金额、积分等数据	$orderdb = DB::fetch_first("SELECT * FROM %t WHERE orderno=%s AND status=0", array('achpay_log', $out_trade_no));	if (empty($orderdb['logid'])) {		achpay_json(lang('plugin/achpay', 'lang008'));	}    $param = array(        'orderApplyNo'=>$out_trade_no,        'merchantId'=>'GCN001-001',        'amount'=>$orderdb['price'],        'notifyUrl'=>rtrim($_G['siteurl'], '/') . '/source/plugin/achpay/notify.php',        'successUrl'=>rtrim($_G['siteurl'], '/') . '/source/plugin/achpay/return.php',        'paymentChannel'=>$_GET['payMethod']    );    //对数据进行签名    $param['sign'] = achpay_get_sign($param,DISCUZ_ROOT . 'source/plugin/achpay/keys/pkey.txt');//    var_dump($param);exit;//组装好数据之后进行post $result为返回结果    $personPayment = 'http://13.250.21.97:9190/personalCollection/third/order/pay/page';//    跳转到支付网关    header("Location:".$personPayment.'?'.http_build_query($param));    exit;}elseif ($act == 'qrcode') {	$qrcode = getgpc('qrcode');	if (empty($qrcode)) {		$qrcode = $_G['siteurl'];	} else {		$qrcode = base64_decode(rawurldecode($qrcode));	}	if (!class_exists('QRcode', false)) {		include_once(DISCUZ_ROOT . './source/plugin/achpay/qrcode.class.php');	}	echo QRcode::png($qrcode, false, 3, 10, 2, false);	exit;}elseif ($act == 'checkpay') {//收到订单号	$out_trade_no = getgpc('out_trade_no');//查询该订单是否支付成功    $url = 'https://test.alchemy.foundation/gateway/query/order/status';    $checkdata= array(        "orderId"=>$out_trade_no,        "merchantId"=>$salepayconf['cyrpt'],        "apiVersion"=>"1.0"    );    $checkdata['sign'] = achpay_get_sign($checkdata,DISCUZ_ROOT . 'source/plugin/achpay/keys/pkey.txt');//    var_dump($checkdata);exit;    $cyrptres = json_decode(achpay_http_post($url,$checkdata));//    判断$cyrptres的签名    if($cyrptres->orderStatus=='SUCCESS'||$res->orderStatus=='MSUCCESS'){        $logid = DB::result_first("SELECT logid FROM %t WHERE orderno=%s AND status<>1", array('achpay_log', trim($out_trade_no)));//如果订单号存在并且金额相同        if ($logid) {            achpay_finish($logid);            echo 'success';            exit;        }    }    echo 'failure';    exit;}else {	showmessage('Access Denied');}